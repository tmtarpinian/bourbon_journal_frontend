{"ast":null,"code":"const allCategories = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_CATEGORIES'\n    });\n    fetch(\"http://localhost:3001/categories\").then(response => response.json()).then(categories => dispatch({\n      type: 'CATEGORIES',\n      payload: categories\n    }));\n  };\n};\n\nconst showCategories = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_CATEGORIES'\n    }) // fetch(\"http://localhost:3001/categories/\")   need ID\n    .then(response => response.json()).then(category => dispatch({\n      type: 'CATEGORIES',\n      payload: category\n    }));\n  };\n};\n\nconst newCategory = category => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_CATEGORIES'\n    });\n    fetch(\"http://localhost:3001/categories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(category)\n    }).then(response => response.json()).then(category => dispatch({\n      type: 'NEW_CATEGORY',\n      payload: category\n    }));\n  };\n};\n\nexport { allCategories, newCategory };","map":{"version":3,"sources":["/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/actions/CategoriesActions.js"],"names":["allCategories","dispatch","type","fetch","then","response","json","categories","payload","showCategories","category","newCategory","method","headers","body","JSON","stringify"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAM;AACxB,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,UAAU,IAAIN,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,YAAP;AAAqBM,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAF5B;AAGH,GALD;AAMH,CAPD;;AASA,MAAME,cAAc,GAAG,MAAM;AACzB,SAAOR,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR,CACA;AADA,KAECE,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGCF,IAHD,CAGMM,QAAQ,IAAIT,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,YAAP;AAAqBM,MAAAA,OAAO,EAAEE;AAA9B,KAAD,CAH1B;AAIH,GALD;AAMH,CAPD;;AASA,MAAMC,WAAW,GAAGD,QAAQ,IAAI;AAC5B,SAAQT,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,kCAAD,EAAqC;AACxCS,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAF+B;AAMxCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AANkC,KAArC,CAAL,CAQCN,IARD,CAQMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARlB,EASCF,IATD,CASMM,QAAQ,IAAIT,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,cAAP;AAAuBM,MAAAA,OAAO,EAAEE;AAAhC,KAAD,CAT1B;AAUD,GAZD;AAaH,CAdD;;AAgBA,SACIV,aADJ,EAEIW,WAFJ","sourcesContent":["const allCategories = () => {\n    return dispatch => {\n        dispatch({type: 'LOADING_CATEGORIES'})\n        fetch(\"http://localhost:3001/categories\")\n        .then(response => response.json())\n        .then(categories => dispatch({type: 'CATEGORIES', payload: categories}))\n    }\n} \n\nconst showCategories = () => {\n    return dispatch => {\n        dispatch({type: 'LOADING_CATEGORIES'})\n        // fetch(\"http://localhost:3001/categories/\")   need ID\n        .then(response => response.json())\n        .then(category => dispatch({type: 'CATEGORIES', payload: category}))\n    }\n}\n\nconst newCategory = category => {\n    return (dispatch) => {\n      dispatch({type: 'LOADING_CATEGORIES'})\n      fetch(\"http://localhost:3001/categories\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(category)\n      })\n      .then(response => response.json())\n      .then(category => dispatch({type: 'NEW_CATEGORY', payload: category}))\n    }\n}\n\nexport {\n    allCategories,\n    newCategory\n}"]},"metadata":{},"sourceType":"module"}