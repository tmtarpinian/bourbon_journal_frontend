{"ast":null,"code":"import { useHistory } from 'react-router-dom';\n\nfunction bourbonReducer(state = {\n  bourbons: [],\n  loading: false\n}, action) {\n  let idx; //remove this variable if not used for edit/update\n\n  switch (action.type) {\n    case 'LOADING_BOURBONS':\n      return { ...state,\n        loading: true\n      };\n\n    case 'BOURBONS':\n      return { ...state,\n        bourbons: action.payload,\n        loading: false\n      };\n\n    case 'NEW_BOURBON':\n      return { ...state,\n        bourbons: [...state.bourbons, action.payload],\n        loading: false\n      };\n\n    case 'DELETE_BOURBON':\n      return { ...state,\n        bourbons: state.bourbons.filter(bourbon => bourbon.id != action.payload)\n      }, useHistory(\"/bourbons\");\n\n    default:\n      return state;\n  }\n}\n\ngoToBourbons = () => {\n  let history = useHistory();\n};\n\nexport default bourbonReducer; //return {...state, bourbons: [[...state.bourbons.slice(0, idx.id), ...state.bourbons.slice(idx + 1)]]};","map":{"version":3,"sources":["/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/reducers/bourbonReducer.js"],"names":["useHistory","bourbonReducer","state","bourbons","loading","action","idx","type","payload","filter","bourbon","id","goToBourbons","history"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,cAAT,CACIC,KAAK,GAAG;AACNC,EAAAA,QAAQ,EAAE,EADJ;AAENC,EAAAA,OAAO,EAAE;AAFH,CADZ,EAKIC,MALJ,EAMM;AACF,MAAIC,GAAJ,CADE,CACkB;;AACpB,UAAQD,MAAM,CAACE,IAAf;AACI,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGL,KAAJ;AAAWE,QAAAA,OAAO,EAAE;AAApB,OAAP;;AAEJ,SAAK,UAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWC,QAAAA,QAAQ,EAAEE,MAAM,CAACG,OAA5B;AAAqCJ,QAAAA,OAAO,EAAE;AAA9C,OAAP;;AAEJ,SAAK,aAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWC,QAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBE,MAAM,CAACG,OAA3B,CAArB;AAA0DJ,QAAAA,OAAO,EAAE;AAAnE,OAAP;;AAEJ,SAAK,gBAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWC,QAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeM,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,IAAeN,MAAM,CAACG,OAAvD;AAArB,SACPR,UAAU,CAAC,WAAD,CADV;;AAGJ;AACI,aAAOE,KAAP;AAfR;AAiBH;;AAEDU,YAAY,GAAG,MAAM;AACjB,MAAIC,OAAO,GAAGb,UAAU,EAAxB;AACH,CAFD;;AAIA,eAAeC,cAAf,C,CAIA","sourcesContent":["import { useHistory } from 'react-router-dom';\n\nfunction bourbonReducer(\n    state = {\n      bourbons: [], \n      loading: false\n    },\n    action\n    ) {\n    let idx;            //remove this variable if not used for edit/update\n    switch (action.type) {\n        case 'LOADING_BOURBONS':\n            return {...state, loading: true};\n        \n        case 'BOURBONS':\n            return {...state, bourbons: action.payload, loading: false};\n\n        case 'NEW_BOURBON':\n            return {...state, bourbons: [...state.bourbons, action.payload], loading: false}     \n\n        case 'DELETE_BOURBON':\n            return {...state, bourbons: state.bourbons.filter(bourbon => bourbon.id  != action.payload)},\n            useHistory(\"/bourbons\");\n  Â \n        default:\n            return state;\n    }\n}\n\ngoToBourbons = () => {\n    let history = useHistory()\n}\n\nexport default bourbonReducer\n\n\n\n//return {...state, bourbons: [[...state.bourbons.slice(0, idx.id), ...state.bourbons.slice(idx + 1)]]};"]},"metadata":{},"sourceType":"module"}