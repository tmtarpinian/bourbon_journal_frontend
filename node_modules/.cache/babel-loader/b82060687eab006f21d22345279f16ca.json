{"ast":null,"code":"var _jsxFileName = \"/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/containers/NewBourbon.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { newBourbon } from '../actions/BourbonsActions';\nimport BourbonForm from '../components/BourbonForm';\n\nclass NewBourbon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      distillery: \"\",\n      proof: null,\n      aged: null,\n      flavornotes: \"\",\n      pairing: \"\"\n    };\n\n    this.backToBourbons = () => {\n      useHistory();\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const goToBourbons = useHistory();\n      this.props.newBourbon(this.state);\n      this.setState({\n        //this is NOT clearing the form out\n        name: \"\",\n        distillery: \"\",\n        proof: null,\n        aged: null,\n        flavornotes: \"\",\n        pairing: \"\"\n      });\n      return () => goToBourbons.push('/bourbons');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(BourbonForm, {\n      handleInputChange: this.handleInputChange,\n      handleOnSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default connect(null, {\n  newBourbon\n})(NewBourbon);","map":{"version":3,"sources":["/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/containers/NewBourbon.js"],"names":["React","Component","connect","useHistory","newBourbon","BourbonForm","NewBourbon","state","name","distillery","proof","aged","flavornotes","pairing","backToBourbons","handleInputChange","event","setState","target","id","value","handleOnSubmit","preventDefault","goToBourbons","props","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,KAAK,EAAE,IAHH;AAIJC,MAAAA,IAAI,EAAE,IAJF;AAKJC,MAAAA,WAAW,EAAE,EALT;AAMJC,MAAAA,OAAO,EAAE;AANL,KADuB;;AAAA,SAU/BC,cAV+B,GAUd,MAAM;AACrBX,MAAAA,UAAU;AACX,KAZ8B;;AAAA,SAejCY,iBAfiC,GAeZC,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,EAAd,GAAmBH,KAAK,CAACE,MAAN,CAAaE;AADpB,OAAd;AAGD,KAnBgC;;AAAA,SAqBjCC,cArBiC,GAqBfL,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAMC,YAAY,GAAGpB,UAAU,EAA/B;AACA,WAAKqB,KAAL,CAAWpB,UAAX,CAAsB,KAAKG,KAA3B;AACA,WAAKU,QAAL,CAAc;AAAsB;AAClCT,QAAAA,IAAI,EAAE,EADM;AAEZC,QAAAA,UAAU,EAAE,EAFA;AAGZC,QAAAA,KAAK,EAAE,IAHK;AAIZC,QAAAA,IAAI,EAAE,IAJM;AAKZC,QAAAA,WAAW,EAAE,EALD;AAMZC,QAAAA,OAAO,EAAE;AANG,OAAd;AAQA,aAAO,MAAKU,YAAY,CAACE,IAAb,CAAkB,WAAlB,CAAZ;AAED,KAnCgC;AAAA;;AAqCjCC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,WAAD;AAAa,MAAA,iBAAiB,EAAE,KAAKX,iBAArC;AAAwD,MAAA,cAAc,EAAE,KAAKM,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAzCgC;;AA6CnC,eAAenB,OAAO,CAAC,IAAD,EAAO;AAACE,EAAAA;AAAD,CAAP,CAAP,CAA4BE,UAA5B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { useHistory } from 'react-router-dom';\nimport {newBourbon} from '../actions/BourbonsActions'\nimport BourbonForm from '../components/BourbonForm'\n\nclass NewBourbon extends Component {\n    state = {\n        name: \"\",\n        distillery: \"\",\n        proof: null,\n        aged: null,\n        flavornotes: \"\",\n        pairing: \"\"\n    }\n\n    backToBourbons = () => {\n      useHistory()\n    }\n    \n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    const goToBourbons = useHistory()\n    this.props.newBourbon(this.state)     \n    this.setState({                     //this is NOT clearing the form out\n      name: \"\",\n      distillery: \"\",\n      proof: null,\n      aged: null,\n      flavornotes: \"\",\n      pairing: \"\"\n    })\n    return(()=> goToBourbons.push('/bourbons'))\n    \n  }\n\n  render() {\n    return(\n      <BourbonForm handleInputChange={this.handleInputChange} handleOnSubmit={this.handleOnSubmit}/>\n    )\n  }\n  \n}\n\nexport default connect(null, {newBourbon})(NewBourbon);"]},"metadata":{},"sourceType":"module"}