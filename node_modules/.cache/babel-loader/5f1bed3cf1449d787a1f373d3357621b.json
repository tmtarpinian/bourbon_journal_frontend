{"ast":null,"code":"var _jsxFileName = \"/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/containers/NewBourbon.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newBourbon } from '../actions/BourbonsActions';\nimport { allCategories } from '../actions/CategoriesActions';\n\nclass NewBourbon extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category_id: null,\n      name: \"\",\n      distillery: \"\",\n      proof: null,\n      aged: null,\n      flavornotes: \"\",\n      pairing: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleCategoryChange = event => {\n      debugger;\n      this.setState({\n        category_id: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      debugger;\n      this.props.newBourbon(this.state);\n      this.setState({\n        category_id: null,\n        name: \"\",\n        distillery: \"\",\n        proof: null,\n        aged: null,\n        flavornotes: \"\",\n        pairing: \"\"\n      });\n      this.props.history.push('/bourbons');\n    };\n  }\n\n  // fetched all categories to state on mount so accessible in form selections input\n  componentDidMount() {\n    this.props.allCategories();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"new-bourbon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \" Add Your Boubon Here\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleOnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Pick A Category:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      id: \"category\",\n      value: this.state.category_id,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, this.props.categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n      key: category.id,\n      value: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 58\n      }\n    }, category.name))))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \" Name: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"name\",\n      onChange: this.handleInputChange,\n      placeholder: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \" Distillery: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"distillery\",\n      onChange: this.handleInputChange,\n      placeholder: \"Distillery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \" Proof: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"proof\",\n      onChange: this.handleInputChange,\n      placeholder: \"How Strong is this?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \" Aged: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"aged\",\n      onChange: this.handleInputChange,\n      placeholder: \"How Old?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \" Flavornotes: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"textarea\",\n      id: \"flavornotes\",\n      onChange: this.handleInputChange,\n      placeholder: \"write the flavors you taste here\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \" Food Pairing: \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      id: \"pairing\",\n      onChange: this.handleInputChange,\n      placeholder: \"pair it with any food?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      class: \"btn btn-block btn-lg btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  newBourbon,\n  allCategories\n})(NewBourbon);","map":{"version":3,"sources":["/Users/user/Development/projects/bourbon_journal/bourbon_journal_frontend/src/containers/NewBourbon.js"],"names":["React","Component","connect","newBourbon","allCategories","NewBourbon","state","category_id","name","distillery","proof","aged","flavornotes","pairing","handleInputChange","event","setState","target","id","value","handleCategoryChange","handleOnSubmit","preventDefault","props","history","push","componentDidMount","render","categories","map","category","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport {newBourbon} from '../actions/BourbonsActions'\nimport { allCategories } from '../actions/CategoriesActions'\n\n\n\nclass NewBourbon extends Component {\n    state = {\n        category_id: null,\n        name: \"\",\n        distillery: \"\",\n        proof: null,\n        aged: null,\n        flavornotes: \"\",\n        pairing: \"\"\n    }\n    // fetched all categories to state on mount so accessible in form selections input\n  componentDidMount(){\n    this.props.allCategories()\n    }\n\n  handleInputChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleCategoryChange = (event) => {\n    debugger\n    this.setState({\n      category_id: event.target.value\n    });\n  }\n\n  handleOnSubmit = (event) => {\n    event.preventDefault();\n    debugger\n\n    this.props.newBourbon(this.state)\n    this.setState({\n      category_id: null,\n      name: \"\",\n      distillery: \"\",\n      proof: null,\n      aged: null,\n      flavornotes: \"\",\n      pairing: \"\"\n    })\n    this.props.history.push('/bourbons')\n\n  }\n\n  render() {\n    return(\n      <div id=\"new-bourbon\">\n        <h2> Add Your Boubon Here</h2>\n        <form onSubmit={this.handleOnSubmit}>\n          <p>\n            <label>\n              Pick A Category:\n              <br/>\n              <br/>\n              <select className=\"form-control\" id=\"category\" value={this.state.category_id} onChange={this.handleInputChange}>\n                {/* <option value=\"grapefruit\">Grapefruit</option>\n                <option value=\"lime\">Lime</option>\n                <option value=\"coconut\">Coconut</option>\n                <option value=\"mango\">Mango</option>\n                {categories} */}\n                {this.props.categories.map((category) => <option key={category.id} value={category.id}>{category.name}</option>)}\n              </select>\n            </label>\n          </p>\n          <p>\n            <label> Name: <br/>\n              <input className=\"form-control\"\n                type=\"text\"\n                id=\"name\"\n                onChange={this.handleInputChange}\n                placeholder=\"name\"\n              />\n            </label>\n          </p>\n          <p>\n            <label> Distillery: <br/>\n              <input className=\"form-control\"\n                type=\"text\"\n                id=\"distillery\"\n                onChange={this.handleInputChange}\n                placeholder=\"Distillery\"\n              />\n            </label>\n          </p>\n          <p>\n            <label> Proof: <br/>\n              <input className=\"form-control\"\n                type=\"text\"\n                id=\"proof\"\n                onChange={this.handleInputChange}\n                placeholder=\"How Strong is this?\"\n              />\n            </label>\n          </p>\n          <p>\n            <label> Aged: <br/>\n              <input className=\"form-control\"\n                type=\"text\"\n                id=\"aged\"\n                onChange={this.handleInputChange}\n                placeholder=\"How Old?\"\n              />\n            </label>\n          </p>\n          <p>\n            <label> Flavornotes: <br/>\n              <input className=\"form-control\"\n                type=\"textarea\"\n                id=\"flavornotes\"\n                onChange={this.handleInputChange}\n                placeholder=\"write the flavors you taste here\"\n              />\n            </label>\n          </p>\n          <p>\n            <label> Food Pairing: <br/>\n              <input className=\"form-control\"\n                type=\"text\"\n                id=\"pairing\"\n                onChange={this.handleInputChange}\n                placeholder=\"pair it with any food?\"\n              />\n            </label>\n          </p>\n          <input type=\"submit\" class=\"btn btn-block btn-lg btn-primary\"/>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      categories: state.categories.categories\n  }\n}\n\nexport default connect(mapStateToProps, {newBourbon, allCategories})(NewBourbon);"]},"metadata":{},"sourceType":"module"}